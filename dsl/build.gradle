/*
 * Copyright 2022 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'groovy'
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
}

configurations {
  doclet
}

description = "Groovy DSL for GoCD pipeline definitions, for use with the gocd-groovy-dsl-plugin"

dependencies {
  doclet project(':doclet')
  annotationProcessor project.deps.lombok
  annotationProcessor project.deps.hibernateValidatorAnnotationProcessor

  compileOnly project.deps.lombok

  implementation project.deps.groovy
  implementation project.deps.groovyJson

  implementation platform(project.deps.jacksonBom)
  implementation project.deps.jacksonAnnotations

  implementation project.deps.commonsLang
  implementation project.deps.validateApi

  testImplementation platform(project.deps.junitJupiterBom)
  testImplementation project.deps.junitJupiterApi
  testImplementation project.deps.junitJupiterParams
  testRuntimeOnly project.deps.junitJupiterEngine
  testRuntimeOnly project.deps.junitJupiterPlatformLauncher

  testImplementation project.deps.reflections
  testImplementation project.deps.classgraph
}

test {
  useJUnitPlatform()
}

sourceSets {
  main.compileClasspath += project.configurations.compileClasspath

  examples {
    compileClasspath += sourceSets.main.output
    compileClasspath += sourceSets.main.compileClasspath
  }
}


task delombok(type: JavaExec) {
  inputs.files(sourceSets.main.compileClasspath.files)

  ext.outputDir = file("${buildDir}/delombok")
  outputs.dir(outputDir)
  outputs.cacheIf { true }

  classpath = sourceSets.main.compileClasspath
  mainClass.set('lombok.launch.Main')

  args("delombok")
  args('--encoding=utf-8')
//  args("-v")

  sourceSets.main.java.srcDirs.each {
    inputs.dir(it)
    args(it, "-d", outputDir)
  }
}

task sourcesJar(type: Jar) {
  dependsOn delombok
  archiveClassifier = 'sources'
  from delombok.outputDir
}

task javadocJar(type: Jar) {
  dependsOn javadoc
  from javadoc
  archiveClassifier = 'javadoc'
}

javadoc {
  dependsOn delombok
  dependsOn configurations.doclet

  source = delombok.outputDir
  options.tagletPath = (configurations.doclet.files + sourceSets.examples.allSource.srcDirs) as List
  options.taglets = ['cd.go.contrib.plugins.configrepo.doclet.IncludeCodeTaglet']

  options.encoding = 'utf-8'
  options.addStringOption '-Xdoclint:-syntax,-html,-reference,-accessibility'
  options.addBooleanOption('html5', true)

  options.overview('overview.html')
  options.showFromPublic()

  options.links("https://docs.oracle.com/en/java/javase/11/docs/api", "https://docs.groovy-lang.org/docs/groovy-${project.vers.groovyVersion}/html/gapi")
  title = "GoCD Groovy DSL API ${version}"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar

      pom {
        name = project.name
        description = project.description
        url = 'https://github.com/gocd-contrib/gocd-groovy-dsl-config-plugin'
        inceptionYear = '2019'

        licenses {
          license {
            name = 'Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
          }
        }
        developers {
          developer {
            id = 'GoCD Committers'
            email = 'go-cd-dev@googlegroups.com'
            url = 'https://www.gocd.org'
          }
        }
        scm {
          url = 'https://github.com/gocd-contrib/gocd-groovy-dsl-config-plugin'
          connection = 'scm:https://github.com/gocd-contrib/gocd-groovy-dsl-config-plugin'
          developerConnection = 'https://github.com/gocd-contrib/gocd-groovy-dsl-config-plugin'
        }

        organization {
          name = 'Thoughtworks, Inc.'
          url = 'https://www.thoughtworks.com'
        }

        issueManagement {
          url = 'https://github.com/gocd-contrib/gocd-groovy-dsl-config-plugin/issues'
          system = 'GitHub'
        }
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}

project.ext.'signing.password' = System.getenv('GOCD_GPG_PASSPHRASE')
project.ext.'signing.keyId' = System.getenv('GOCD_GPG_KEY_ID')
project.ext.'signing.secretKeyRingFile' = System.getenv('GOCD_GPG_KEYRING_FILE')

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}
